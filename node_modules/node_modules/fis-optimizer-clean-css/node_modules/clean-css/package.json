{
  "name": "clean-css",
  "version": "1.1.7",
  "author": {
    "name": "Jakub Pawlowicz",
    "email": "jakub@goalsmashers.com",
    "url": "http://twitter.com/GoalSmashers"
  },
  "description": "A well-tested CSS minifier",
  "keywords": [
    "css",
    "minifier"
  ],
  "homepage": "https://github.com/GoalSmashers/clean-css",
  "repository": {
    "type": "git",
    "url": "https://github.com/GoalSmashers/clean-css.git"
  },
  "bugs": {
    "url": "https://github.com/GoalSmashers/clean-css/issues"
  },
  "bin": {
    "cleancss": "./bin/cleancss"
  },
  "main": "index.js",
  "files": [
    "bin",
    "lib",
    "History.md",
    "index.js",
    "LICENSE"
  ],
  "scripts": {
    "bench": "node ./test/bench.js",
    "check": "jshint .",
    "prepublish": "jshint .",
    "test": "vows"
  },
  "dependencies": {
    "commander": "2.0.x"
  },
  "devDependencies": {
    "vows": "0.7.x",
    "jshint": "~2.1.9"
  },
  "jshintConfig": {
    "browser": false,
    "maxerr": 100,
    "node": true,
    "camelcase": true,
    "curly": false,
    "eqeqeq": false,
    "eqnull": false,
    "immed": true,
    "latedef": true,
    "multistr": true,
    "noarg": true,
    "plusplus": false,
    "quotmark": "true",
    "regexp": false,
    "strict": false,
    "trailing": true,
    "undef": true,
    "unused": true
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "license": "MIT",
  "readme": "[![NPM version](https://badge.fury.io/js/clean-css.png)](https://badge.fury.io/js/clean-css)\n[![Build Status](https://secure.travis-ci.org/GoalSmashers/clean-css.png)](https://travis-ci.org/GoalSmashers/clean-css)\n[![Dependency Status](https://gemnasium.com/GoalSmashers/clean-css.png)](https://gemnasium.com/GoalSmashers/clean-css)\n\n## What is clean-css?\n\nClean-css is a [node.js](http://nodejs.org/) library for minifying CSS files.\nIt does the same job as YUI Compressor's CSS minifier, but much faster thanks\nto many speed optimizations and node.js' V8 engine.\n\n\n## Usage\n\n### What are the requirements?\n\n```\nnode.js 0.8.0+ (tested on CentOS, Ubuntu, OS X 10.6+, and Windows 7+)\n```\n\n### How to install clean-css?\n\n```\nnpm install clean-css\n```\n\n### How to use clean-css CLI?\n\nClean-css accepts the following command line arguments (please make sure\nyou use `<source-file>` as the very last argument to avoid potential issues):\n\n```\ncleancss [options] <source-file>\n\n-h, --help                  Output usage information\n-v, --version               Output the version number\n-e, --remove-empty          Remove empty declarations, e.g. a{}\n-b, --keep-line-breaks      Keep line breaks\n--s0                        Remove all special comments, i.e. /*! comment */\n--s1                        Remove all special comments but the first one\n-r, --root [root-path]      A root path to which resolve absolute @import rules and rebase relative URLs\n-o, --output [output-file]  Use [output-file] as output instead of STDOUT\n-s, --skip-import           Disable @import processing\n--skip-rebase               Disable URLs rebasing\n-d, --debug                 Shows debug information (minification time & compression efficiency)\n```\n\n#### Examples:\n\nTo minify a **public.css** file into **public-min.css** do:\n\n```\ncleancss -o public-min.css public.css\n```\n\nTo minify the same **public.css** into the standard output skip the `-o` parameter:\n\n```\ncleancss public.css\n```\n\nMore likely you would like to concatenate a couple of files.\nIf you are on a Unix-like system:\n\n```bash\ncat one.css two.css three.css | cleancss -o merged-and-minified.css\n```\n\nOn Windows:\n\n```bat\ntype one.css two.css three.css | cleancss -o merged-and-minified.css\n```\n\nOr even gzip the result at once:\n\n```bash\ncat one.css two.css three.css | cleancss | gzip -9 -c > merged-minified-and-gzipped.css.gz\n```\n\n### How to use clean-css programmatically?\n\n```js\nvar cleanCSS = require('clean-css');\nvar source = 'a{font-weight:bold;}';\nvar minimized = cleanCSS.process(source);\n```\n\nProcess method accepts a hash as a second parameter, i.e.,\n`cleanCSS.process(source, options)` with the following options available:\n\n* `keepSpecialComments` - `*` for keeping all (default), `1` for keeping first one, `0` for removing all\n* `keepBreaks` - whether to keep line breaks (default is false)\n* `removeEmpty` - whether to remove empty elements (default is false)\n* `benchmark` - turns on benchmarking mode measuring time spent on cleaning up\n  (run `npm run bench` to see example)\n* `root` - path to resolve absolute `@import` rules and rebase relative URLs\n* `relativeTo` - path with which to resolve relative `@import` rules and URLs\n* `processImport` - whether to process `@import` rules\n* `noRebase` - whether to skip URLs rebasing\n\n### What are the clean-css' dev commands?\n\nFirst clone the source, then run:\n\n* `npm run bench` for clean-css benchmarks (see [test/bench.js](https://github.com/GoalSmashers/clean-css/blob/master/test/bench.js) for details)\n* `npm run check` to check JS sources with [JSHint](https://github.com/jshint/jshint/)\n* `npm test` for the test suite\n\n## Tips & Tricks\n\n### How to preserve a comment block?\n\nUse the `/*!` notation instead of the standard one `/*`:\n\n```css\n/*!\n  Important comments included in minified output.\n*/\n```\n\n### How to rebase relative image URLs\n\nClean-css will handle it automatically for you (since version 1.1) in the following cases:\n\n* When using the CLI:\n  1. Use an output path via `-o/--output` to rebase URLs as relative to the output file.\n  2. Use a root path via `-r/--root` to rebase URLs as absolute from the given root path.\n  3. If you specify both then `-r/--root` takes precendence.\n* When using clean-css as a library:\n  1. Use a combination of `relativeTo` and `target` options for relative rebase (same as 1 in CLI).\n  2. Use a combination of `relativeTo` and `root` options for absolute rebase (same as 2 in CLI).\n  3. `root` takes precendence over `target` as in CLI.\n\n## Acknowledgments\n\n* Vincent Voyer ([@vvo](https://github.com/vvo)) for a patch with better\n  empty element regex and for inspiring us to do many performance improvements\n  in 0.4 release.\n* Isaac ([@facelessuser](https://github.com/facelessuser)) for pointing out\n  a flaw in clean-css' stateless mode.\n* Jan Michael Alonzo ([@jmalonzo](https://github.com/jmalonzo)) for a patch\n  removing node.js' old `sys` package.\n* [@XhmikosR](https://github.com/XhmikosR) for suggesting new features\n  (option to remove special comments and strip out URLs quotation) and\n  pointing out numerous improvements (JSHint, media queries).\n* Anthony Barre ([@abarre](https://github.com/abarre)) for improvements to\n  `@import` processing, namely introducing the `--skip-import` /\n  `processImport` options.\n\n## License\n\nClean-css is released under the [MIT License](https://github.com/GoalSmashers/clean-css/blob/master/LICENSE).\n",
  "readmeFilename": "README.md",
  "_id": "clean-css@1.1.7",
  "_shasum": "601ef9cf7642b982cb33efc9488a6444c986686e",
  "_from": "clean-css@1.1.7",
  "_resolved": "https://registry.npmjs.org/clean-css/-/clean-css-1.1.7.tgz"
}
