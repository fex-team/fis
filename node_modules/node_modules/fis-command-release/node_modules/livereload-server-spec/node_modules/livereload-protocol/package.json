{
  "author": {
    "name": "Andrey Tarantsov",
    "email": "andrey@tarantsov.com"
  },
  "name": "livereload-protocol",
  "description": "LiveReload protocol parser",
  "version": "0.2.2",
  "homepage": "https://github.com/andreyvit/livereload_protocol",
  "repository": {
    "url": "git://github.com/andreyvit/livereload_protocol"
  },
  "main": "lib/parser.js",
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha -R ${REPORTER-spec}"
  },
  "dependencies": {
    "debug": "~0.7.0"
  },
  "devDependencies": {
    "mocha": "~1.0.3"
  },
  "optionalDependencies": {},
  "engines": {
    "node": "*"
  },
  "readme": "# LiveReload protocol parser\n\nHandles [LiveReload protocol](http://help.livereload.com/kb/ecosystem/livereload-protocol) handshake, validates and parses incoming commands, validates outgoing commands.\n\n## Synopsis\n\n    var Parser = require('livereload-parser');\n    parser = new Parser('server', { monitoring: [Parser.protocols.MONITORING_7] });\n    parser.on('error', function(err) {\n      console.error('Error %s when parsing incoming message: %s', err.code, err.message);\n      mywebsocket.close();\n    });\n    parser.on('connected', function() {\n      console.log('Handshake done! Protocols: %j', parser.negotiatedProtocols);\n      if (parser.negotiatedProtocols.monitoring >= 7) {\n        console.log('TODO: activate monitoring here');\n      }\n    });\n    parser.on('command', function(message) {\n      console.log('Incoming command %s, data %j', message.command, message);\n    });\n    mywebsocket.on('data', function(data) {\n      parser.received(data);\n    });\n\n## Installation\n\n    npm install livereload-protocol\n\n## Running tests\n\n    npm test\n\n## License\n\nÂ© 2012, Andrey Tarantsov, distributed under the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/andreyvit/livereload_protocol/issues"
  },
  "_id": "livereload-protocol@0.2.2",
  "_from": "livereload-protocol@~0.2.2"
}
